version: 2.1

jobs:
  build-and-push-docker-image:
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 && \
            sudo chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
      - run:
          name: Push Docker Image to Docker Hub
          command: |
            export IMAGE_NAME=capstone-project
            docker build -t ahmedo42/$IMAGE_NAME .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD 
            docker push ahmedo42/$IMAGE_NAME

  


  deploy:
      docker:
        - image: circleci/python:3.7
      steps:
        - checkout
        - run:
            name: Install awscli and gettext-base
            command: |
              sudo pip3 install awscli
              sudo apt-get install gettext-base
        - run:
            name: Install aws-iam-authenticator
            command: |
              curl -o aws-iam-authenticator curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
              sudo chmod +x ./aws-iam-authenticator
              sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
        - run:
            name: Install kubectl
            command: |
              curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/kubectl
              sudo chmod +x ./kubectl
              sudo mv ./kubectl /usr/local/bin/kubectl
        - run:
            name: Connect to cluster
            command: |
              aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME
        - run:
            name: Prepare K8S template
            command: |
              rm -rf .k8s/.generated && mkdir -p project/.k8s/.generated
              for f in project/.k8s/template/deployment.yaml
                do
                envsubst < $f > "project/.k8s/.generated/$(basename $f)"
              done
        - run:
            name: Deploy
            command: |
              kubectl apply -f project/.k8s/.generated/
              kubectl get pod
workflows:
  default:
    jobs:
      - build-and-push-docker-image
      - deploy:
          requires: [build-and-push-docker-image]